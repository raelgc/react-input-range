{"version":3,"file":"value-transformer.js","names":["_utils","require","_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","key","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","getPercentageFromPosition","position","clientRect","width","sizePerc","x","getValueFromPosition","minValue","maxValue","valueDiff","getValueFromProps","props","isMultiValue","min","max","getPercentageFromValue","validValue","clamp","valuePerc","getPercentagesFromValues","values","getPositionFromValue","positionValue","y","getPositionsFromValues","getPositionFromEvent","event","_ref","touches","clientX","left","getStepValueFromValue","valuePerStep","Math","round"],"sources":["../../../src/js/input-range/value-transformer.js"],"sourcesContent":["import { clamp } from '../utils';\n\n/**\n * Convert a point into a percentage value\n * @ignore\n * @param {Point} position\n * @param {ClientRect} clientRect\n * @return {number} Percentage value\n */\nexport function getPercentageFromPosition(position, clientRect) {\n  const length = clientRect.width;\n  const sizePerc = position.x / length;\n\n  return sizePerc || 0;\n}\n\n/**\n * Convert a point into a model value\n * @ignore\n * @param {Point} position\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {number}\n */\nexport function getValueFromPosition(position, minValue, maxValue, clientRect) {\n  const sizePerc = getPercentageFromPosition(position, clientRect);\n  const valueDiff = maxValue - minValue;\n\n  return minValue + (valueDiff * sizePerc);\n}\n\n/**\n * Convert props into a range value\n * @ignore\n * @param {Object} props\n * @param {boolean} isMultiValue\n * @return {Range}\n */\nexport function getValueFromProps(props, isMultiValue) {\n  if (isMultiValue) {\n    return { ...props.value };\n  }\n\n  return {\n    min: props.minValue,\n    max: props.value,\n  };\n}\n\n/**\n * Convert a model value into a percentage value\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @return {number}\n */\nexport function getPercentageFromValue(value, minValue, maxValue) {\n  const validValue = clamp(value, minValue, maxValue);\n  const valueDiff = maxValue - minValue;\n  const valuePerc = (validValue - minValue) / valueDiff;\n\n  return valuePerc || 0;\n}\n\n/**\n * Convert model values into percentage values\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @return {Range}\n */\nexport function getPercentagesFromValues(values, minValue, maxValue) {\n  return {\n    min: getPercentageFromValue(values.min, minValue, maxValue),\n    max: getPercentageFromValue(values.max, minValue, maxValue),\n  };\n}\n\n/**\n * Convert a value into a point\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Point} Position\n */\nexport function getPositionFromValue(value, minValue, maxValue, clientRect) {\n  const length = clientRect.width;\n  const valuePerc = getPercentageFromValue(value, minValue, maxValue);\n  const positionValue = valuePerc * length;\n\n  return {\n    x: positionValue,\n    y: 0,\n  };\n}\n\n/**\n * Convert a range of values into points\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Range}\n */\nexport function getPositionsFromValues(values, minValue, maxValue, clientRect) {\n  return {\n    min: getPositionFromValue(values.min, minValue, maxValue, clientRect),\n    max: getPositionFromValue(values.max, minValue, maxValue, clientRect),\n  };\n}\n\n/**\n * Convert an event into a point\n * @ignore\n * @param {Event} event\n * @param {ClientRect} clientRect\n * @return {Point}\n */\nexport function getPositionFromEvent(event, clientRect) {\n  const length = clientRect.width;\n  const { clientX } = event.touches ? event.touches[0] : event;\n\n  return {\n    x: clamp(clientX - clientRect.left, 0, length),\n    y: 0,\n  };\n}\n\n/**\n * Convert a value into a step value\n * @ignore\n * @param {number} value\n * @param {number} valuePerStep\n * @return {number}\n */\nexport function getStepValueFromValue(value, valuePerStep) {\n  return Math.round(value / valuePerStep) * valuePerStep;\n}\n"],"mappings":"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"}